version: "3.9"

services:
  workspace:
    image: mcr.microsoft.com/devcontainers/typescript-node:18
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    command: sleep infinity

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - ./shared:/shared
      - /app/node_modules
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - LLM_SERVICE_URL=http://llm-service:9000
      - VECTOR_DB_URL=http://qdrant:6333
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/coding_agent
    volumes:
      - ./backend:/app
      - ./shared:/shared
      - ./workspace:/workspace/projects
      - /app/node_modules
    depends_on:
      - llm-service
      - qdrant
      - postgres

  llm-service:
    build:
      context: ./llm-service
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=development
      - MODEL_PATH=/models
      - GPU_ENABLED=true
    volumes:
      - ./llm-service:/app
      - ./shared:/shared
      - ./models:/models
      - /app/node_modules
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_data:/qdrant_data
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=coding_agent
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

networks:
  default:
    name: coding-agent-network