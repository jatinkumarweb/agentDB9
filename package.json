{
  "name": "agentdb9",
  "version": "1.0.0",
  "description": "Coding Agent ONA Environment - Multi-container TypeScript development environment",
  "private": true,
  "workspaces": [
    "frontend",
    "backend",
    "llm-service",
    "mcp-server",
    "vscode-proxy",
    "shared"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:workspaces",
    "install:workspaces": "npm install --workspaces",
    "postinstall": "npm run build --workspace=shared --if-present",
    "build": "npm run build:shared && npm run build:services",
    "build:shared": "npm run build --workspace=shared",
    "build:services": "npm run build --workspace=frontend & npm run build --workspace=backend & npm run build --workspace=llm-service & npm run build --workspace=mcp-server & npm run build --workspace=vscode-proxy & wait",
    "dev": "./scripts/docker-setup.sh up --build",
    "dev:frontend": "./scripts/docker-setup.sh exec frontend npm run dev",
    "dev:backend": "./scripts/docker-setup.sh exec backend npm run dev",
    "dev:llm": "./scripts/docker-setup.sh exec llm-service npm run dev",
    "dev:mcp": "npm run dev --workspace=mcp-server",
    "dev:vscode-proxy": "npm run dev --workspace=vscode-proxy",
    "setup": "./scripts/setup.sh",
    "setup:ollama": "./scripts/docker-setup.sh exec ollama ollama pull codellama:7b && ./scripts/docker-setup.sh exec ollama ollama pull deepseek-coder:6.7b && ./scripts/docker-setup.sh exec ollama ollama pull codegemma:7b && ./scripts/docker-setup.sh exec ollama ollama pull starcoder2:7b && ./scripts/docker-setup.sh exec ollama ollama pull qwen2.5-coder:7b && ./scripts/docker-setup.sh exec ollama ollama pull magicoder:7b && ./scripts/docker-setup.sh exec ollama ollama pull llama3.1:8b",
    "setup:ollama:large": "./scripts/docker-setup.sh exec ollama ollama pull codellama:13b && ./scripts/docker-setup.sh exec ollama ollama pull codestral:22b",
    "setup:vscode": "curl -X POST http://localhost:8000/api/vscode/setup-extensions",
    "test": "npm run test --workspaces",
    "test:env": "node scripts/test-environment.js",
    "test:models": "./scripts/test-models.sh",
    "test:databases": "./scripts/test-databases.sh",
    "test:vscode": "./scripts/test-vscode.sh",
    "test:api-keys": "./scripts/test-api-keys.sh",
    "validate:docker": "./scripts/validate-docker.sh",
    "validate": "./scripts/validate-environment.sh",
    "lint": "npm run lint --workspaces",
    "clean": "npm run clean --workspaces && ./scripts/docker-setup.sh down -v",
    "clean:db": "./scripts/clean-db.sh",
    "clean:db:deep": "./scripts/clean-db.sh --deep",
    "clean:docker": "./scripts/docker-cleanup.sh",
    "clean:docker:deep": "./scripts/docker-deep-cleanup.sh",
    "monitor:storage": "./scripts/docker-storage-monitor.sh",
    "logs": "./scripts/docker-setup.sh logs -f frontend backend llm-service mcp-server ollama",
    "logs:frontend": "./scripts/docker-setup.sh logs -f frontend",
    "logs:backend": "./scripts/docker-setup.sh logs -f backend",
    "logs:llm": "./scripts/docker-setup.sh logs -f llm-service",
    "logs:mcp": "./scripts/docker-setup.sh logs -f mcp-server",
    "logs:mcp:show": "./scripts/show-mcp-logs.sh",
    "status": "./scripts/docker-setup.sh ps",
    "status:mcp": "./scripts/check-mcp-status.sh",
    "health": "curl -s http://localhost:8000/health && curl -s http://localhost:9000/health && curl -s http://localhost:3000/api/health"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "eslint": "^8.0.0",
    "prettier": "^3.0.0",
    "typescript": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "socket.io": "^4.8.1"
  }
}
